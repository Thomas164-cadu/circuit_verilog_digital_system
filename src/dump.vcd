$date
	Sat Apr 02 09:56:53 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 16 ! resultado0 [15:0] $end
$var reg 16 " A0 [15:0] $end
$var reg 16 # B0 [15:0] $end
$var reg 16 $ C0 [15:0] $end
$var reg 1 % clk0 $end
$var reg 1 & inicio0 $end
$var reg 1 ' rst0 $end
$var reg 16 ( x0 [15:0] $end
$scope module BOCO1 $end
$var wire 16 ) A [15:0] $end
$var wire 16 * B [15:0] $end
$var wire 16 + C [15:0] $end
$var wire 1 % clk $end
$var wire 1 & inicio $end
$var wire 1 ' rst $end
$var wire 16 , x [15:0] $end
$var wire 16 - resultado [15:0] $end
$var wire 2 . M2 [1:0] $end
$var wire 2 / M1 [1:0] $end
$var wire 2 0 M0 [1:0] $end
$var wire 1 1 LX $end
$var wire 1 2 LS $end
$var wire 1 3 LH $end
$var wire 1 4 H $end
$scope module BC1 $end
$var wire 1 % clk $end
$var wire 1 & inicio $end
$var wire 1 ' reset $end
$var reg 1 4 Hula $end
$var reg 1 3 LH $end
$var reg 1 2 LS $end
$var reg 1 1 LX $end
$var reg 2 5 M0 [1:0] $end
$var reg 2 6 M1 [1:0] $end
$var reg 2 7 M2 [1:0] $end
$var reg 5 8 state [4:0] $end
$upscope $end
$scope module BO1 $end
$var wire 16 9 A [15:0] $end
$var wire 16 : B [15:0] $end
$var wire 16 ; C [15:0] $end
$var wire 1 4 H $end
$var wire 1 3 LH $end
$var wire 1 2 LS $end
$var wire 1 1 LX $end
$var wire 2 < M0 [1:0] $end
$var wire 2 = M1 [1:0] $end
$var wire 2 > M2 [1:0] $end
$var wire 16 ? Pronto [15:0] $end
$var wire 1 % clk $end
$var wire 1 ' rst $end
$var wire 16 @ x [15:0] $end
$var wire 16 A saidaSM [15:0] $end
$var wire 16 B saidaR2 [15:0] $end
$var wire 16 C saidaR1 [15:0] $end
$var wire 16 D saidaR0 [15:0] $end
$var wire 16 E saidaM2 [15:0] $end
$var wire 16 F saidaM1 [15:0] $end
$var wire 16 G saidaM0 [15:0] $end
$scope module R0 $end
$var wire 16 H D [15:0] $end
$var wire 16 I Q [15:0] $end
$var wire 1 % clk $end
$var wire 1 1 load $end
$var wire 1 ' rst $end
$var reg 16 J saida [15:0] $end
$upscope $end
$scope module R1 $end
$var wire 16 K Q [15:0] $end
$var wire 1 % clk $end
$var wire 1 3 load $end
$var wire 1 ' rst $end
$var wire 16 L D [15:0] $end
$var reg 16 M saida [15:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 % clk $end
$var wire 1 2 load $end
$var wire 1 ' rst $end
$var wire 16 N Q [15:0] $end
$var wire 16 O D [15:0] $end
$var reg 16 P saida [15:0] $end
$upscope $end
$scope module ULA $end
$var wire 1 4 H $end
$var wire 1 % clk $end
$var wire 16 Q resultado [15:0] $end
$var wire 16 R xis [15:0] $end
$var wire 16 S abc [15:0] $end
$var reg 16 T r [15:0] $end
$upscope $end
$scope module multiplexador0 $end
$var wire 16 U A [15:0] $end
$var wire 16 V B [15:0] $end
$var wire 16 W C [15:0] $end
$var wire 16 X D [15:0] $end
$var wire 1 % clk $end
$var wire 16 Y saidaM [15:0] $end
$var wire 2 Z set [1:0] $end
$var reg 16 [ s [15:0] $end
$upscope $end
$scope module multiplexador1 $end
$var wire 16 \ A [15:0] $end
$var wire 16 ] B [15:0] $end
$var wire 16 ^ C [15:0] $end
$var wire 16 _ D [15:0] $end
$var wire 1 % clk $end
$var wire 16 ` saidaM [15:0] $end
$var wire 2 a set [1:0] $end
$var reg 16 b s [15:0] $end
$upscope $end
$scope module multiplexador2 $end
$var wire 16 c A [15:0] $end
$var wire 16 d B [15:0] $end
$var wire 16 e C [15:0] $end
$var wire 16 f D [15:0] $end
$var wire 1 % clk $end
$var wire 16 g saidaM [15:0] $end
$var wire 2 h set [1:0] $end
$var reg 16 i s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx i
b0 h
bx g
b0 f
b0 e
bx d
b0 c
bx b
b0 a
bx `
b0 _
b0 ^
b0 ]
bx \
bx [
b0 Z
bx Y
b10 X
b1 W
b1 V
b0 U
bx T
bx S
bx R
bx Q
b0 P
bx O
b0 N
b0 M
bx L
b0 K
b0 J
b0 I
b10 H
bx G
bx F
bx E
b0 D
b0 C
b0 B
bx A
b10 @
b0 ?
b0 >
b0 =
b0 <
b10 ;
b1 :
b1 9
b0 8
b0 7
b0 6
b0 5
04
03
02
01
b0 0
b0 /
b0 .
b0 -
b10 ,
b10 +
b1 *
b1 )
b10 (
1'
0&
0%
b10 $
b1 #
b1 "
b0 !
$end
#1
b0 G
b0 Y
b0 \
b0 d
b0 [
b0 E
b0 R
b0 g
b0 i
0'
1%
#2
0%
#3
b1 8
11
b0 F
b0 S
b0 `
b0 b
1%
1&
#4
0%
#5
b10 8
b1 /
b1 6
b1 =
b1 a
01
b10 D
b10 I
b10 ]
b10 c
b10 J
b0 A
b0 L
b0 O
b0 Q
b0 T
1%
#6
0%
#7
b11 8
14
b10 F
b10 S
b10 `
b10 b
b10 E
b10 R
b10 g
b10 i
1%
#8
0%
#9
b100 8
13
b100 A
b100 L
b100 O
b100 Q
b100 T
1%
#10
0%
#11
b100 C
b100 K
b100 _
b100 f
b100 M
b101 8
03
04
b0 /
b0 6
b0 =
b0 a
b1 0
b1 5
b1 <
b1 Z
1%
#12
0%
#13
b110 8
b11 .
b11 7
b11 >
b11 h
b1 G
b1 Y
b1 \
b1 d
b1 [
b0 F
b0 S
b0 `
b0 b
1%
#14
0%
#15
b111 8
14
b10 A
b10 L
b10 O
b10 Q
b10 T
b1 F
b1 S
b1 `
b1 b
b100 E
b100 R
b100 g
b100 i
1%
#16
0%
#17
b1000 8
13
b100 A
b100 L
b100 O
b100 Q
b100 T
1%
#18
0%
#19
b1001 8
03
04
b0 .
b0 7
b0 >
b0 h
b10 0
b10 5
b10 <
b10 Z
1%
#20
0%
#21
b1010 8
b10 E
b10 R
b10 g
b10 i
b101 A
b101 L
b101 O
b101 Q
b101 T
1%
#22
0%
#23
b1011 8
14
b11 A
b11 L
b11 O
b11 Q
b11 T
1%
#24
0%
#25
b1100 8
12
b10 A
b10 L
b10 O
b10 Q
b10 T
1%
#26
0%
#27
b10 !
b10 -
b10 ?
b10 B
b10 N
b10 P
b10 ^
b10 e
b1101 8
02
04
b11 .
b11 7
b11 >
b11 h
b10 /
b10 6
b10 =
b10 a
b0 0
b0 5
b0 <
b0 Z
1%
#28
0%
#29
b1110 8
b0 G
b0 Y
b0 \
b0 d
b0 [
b100 E
b100 R
b100 g
b100 i
b10 F
b10 S
b10 `
b10 b
b11 A
b11 L
b11 O
b11 Q
b11 T
1%
#30
0%
#31
b1111 8
13
b110 A
b110 L
b110 O
b110 Q
b110 T
1%
#32
0%
#33
b10000 8
03
b0 .
b0 7
b0 >
b0 h
b0 /
b0 6
b0 =
b0 a
b11 0
b11 5
b11 <
b11 Z
b110 C
b110 K
b110 _
b110 f
b110 M
1%
#34
0%
#35
b10001 8
b11 .
b11 7
b11 >
b11 h
b0 F
b0 S
b0 `
b0 b
b10 E
b10 R
b10 g
b10 i
b10 G
b10 Y
b10 \
b10 d
b10 [
1%
#36
0%
#37
b10010 8
b110 E
b110 R
b110 g
b110 i
b10 F
b10 S
b10 `
b10 b
b10 A
b10 L
b10 O
b10 Q
b10 T
1%
#38
0%
#39
b10011 8
12
b1000 A
b1000 L
b1000 O
b1000 Q
b1000 T
1%
#40
0%
#41
b0 8
02
b0 .
b0 7
b0 >
b0 h
b0 0
b0 5
b0 <
b0 Z
b1000 !
b1000 -
b1000 ?
b1000 B
b1000 N
b1000 P
b1000 ^
b1000 e
1%
#42
0%
#43
b1 8
11
b10 E
b10 R
b10 g
b10 i
b0 G
b0 Y
b0 \
b0 d
b0 [
1%
#44
0%
#45
b10 8
b1 /
b1 6
b1 =
b1 a
01
b0 F
b0 S
b0 `
b0 b
b100 A
b100 L
b100 O
b100 Q
b100 T
1%
#46
0%
#47
b11 8
14
b10 A
b10 L
b10 O
b10 Q
b10 T
b10 F
b10 S
b10 `
b10 b
1%
#48
0%
#49
b100 8
13
b100 A
b100 L
b100 O
b100 Q
b100 T
1%
#50
0%
#51
b100 C
b100 K
b100 _
b100 f
b100 M
b101 8
03
04
b0 /
b0 6
b0 =
b0 a
b1 0
b1 5
b1 <
b1 Z
1%
#52
0%
#53
b110 8
b11 .
b11 7
b11 >
b11 h
b1 G
b1 Y
b1 \
b1 d
b1 [
b0 F
b0 S
b0 `
b0 b
1%
